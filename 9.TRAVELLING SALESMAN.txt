import itertools

graph = {'A': {'B': 10, 'C': 15, 'D': 20}, 'B': {'A': 10, 'C': 35, 'D': 25}, 'C': {'A': 15, 'B': 35, 'D': 30}, 'D': {'A': 20, 'B': 25, 'C': 30}}
nodes = list(graph.keys())
shortest_path, shortest_distance = None, float('inf')

for perm in itertools.permutations(nodes[1:]):
    path, dist = ['A'] + list(perm), 0
    for i in range(len(path) - 1):
        dist += graph[path[i]][path[i+1]]
    dist += graph[path[-1]]['A']
    if dist < shortest_distance:
        shortest_distance, shortest_path = dist, path

print(f"Shortest path: {shortest_path}, Distance: {shortest_distance}")
